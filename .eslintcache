[{"/home/user/Documents/Springboard/react_draw_card/src/index.js":"1","/home/user/Documents/Springboard/react_draw_card/src/App.js":"2","/home/user/Documents/Springboard/react_draw_card/src/reportWebVitals.js":"3","/home/user/Documents/Springboard/react_draw_card/src/Deck.js":"4","/home/user/Documents/Springboard/react_draw_card/src/Card.js":"5"},{"size":500,"mtime":1609988530709,"results":"6","hashOfConfig":"7"},{"size":144,"mtime":1609992074058,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1609988530709,"results":"9","hashOfConfig":"7"},{"size":2190,"mtime":1610129833771,"results":"10","hashOfConfig":"7"},{"size":172,"mtime":1610061866920,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"12zjsx0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/user/Documents/Springboard/react_draw_card/src/index.js",[],["25","26"],"/home/user/Documents/Springboard/react_draw_card/src/App.js",[],"/home/user/Documents/Springboard/react_draw_card/src/reportWebVitals.js",[],"/home/user/Documents/Springboard/react_draw_card/src/Deck.js",["27"],"import './Deck.css';\nimport Card from './Card';\nimport axios from 'axios';\nimport React, { useState, useEffect, useRef  } from 'react';\n\nconst BASE_URL = \"https://deckofcardsapi.com/api/deck\";\n\nconst Deck = () => {\n    const [deckId, setDeckId] = useState(null);\n    const [card, setCard] = useState(false);\n    const [cardsRemaining, setCardsRemaining] = useState(52);\n    const [autoDraw, setAutoDraw] = useState(false);\n    const timerId = useRef(null);\n\n    // gets the initial deck\n    useEffect(() => {\n        const getDeck = async () => {\n            const res = await axios(`${BASE_URL}/new/shuffle/?deck_count=1`);\n            setDeckId(res.data.deck_id);\n        };\n        getDeck();\n    }, []);\n\n    function cardLeft() {\n        if (cardsRemaining === 0) {\n            setAutoDraw(false);\n            return alert(\"Error: no cards remaining!\");\n        }\n    }\n\n    // will draw the next card unless if the deck has no cards left\n    async function drawCard() {\n        cardLeft();\n\n        try { \n            const res = await axios(`${BASE_URL}/${deckId}/draw/?count=1`);\n            setCard(res.data.cards[0]);\n            setCardsRemaining(res.data.remaining);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    // if autoDraw is true, 1 card will be drawn every second\n    useEffect(() => {\n        cardLeft();\n        \n        if (autoDraw && !timerId.current) {\n            timerId.current = setInterval(async () => {\n                await drawCard();\n            }, 1000);\n        }\n\n        return () => {\n            clearInterval(timerId.current);\n            timerId.current = null;\n        }\n    }, [autoDraw, deckId, setDeckId])\n\n    // will toggle state of autoDraw\n    const toggleAutoDraw = () => {\n        setAutoDraw(autoDraw => !autoDraw);\n    }\n\n    return (\n        <div id=\"Deck-container\">\n            <div id=\"Deck-content\">\n                {card &&\n                    <Card card={card}/>\n                }\n                <br/>\n                <button onClick={drawCard}>Draw a Card!</button>\n                <button onClick={toggleAutoDraw}>Auto Draw!</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Deck;","/home/user/Documents/Springboard/react_draw_card/src/Card.js",[],["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":58,"column":8,"nodeType":"36","endLine":58,"endColumn":37,"suggestions":"37"},{"ruleId":"30","replacedBy":"38"},{"ruleId":"32","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cardLeft' and 'drawCard'. Either include them or remove the dependency array.","ArrayExpression",["42"],["40"],["41"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [autoDraw, cardLeft, deckId, drawCard, setDeckId]",{"range":"45","text":"46"},[1650,1679],"[autoDraw, cardLeft, deckId, drawCard, setDeckId]"]